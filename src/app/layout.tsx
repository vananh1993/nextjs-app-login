"use client";

import type { Metadata } from "next";
import { Inter } from "next/font/google";
import { useReducer } from "react";
import "./globals.css";
// import Header from "../app/components/header";
import layoutContext from "./contexts/layoutContext";
import { hasAuthToken } from "@/app/helpers/authHelper";
const inter = Inter({ subsets: ["latin"] });
import dynamic from 'next/dynamic'

const Header = dynamic(() => import('../app/components/header'), { ssr: false })
// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const layoutReducer = (state = {}, action : any ) => {
    switch (action.type) {
      case "SET_LOGIN_STATUS":
        state = { ...state, login_status: action.payload };
        return state;
      default:
        return state;
    }
  };

  const [layoutState, layoutDispatch] = useReducer(layoutReducer, {
    login_status: hasAuthToken(),
  });
  const providerState = {
    layoutState,
    layoutDispatch,
  };

  // console.log(hasAuthToken());
  
  return (
    <html lang="en">
      <body className={inter.className}>
        <div>
        <layoutContext.Provider value={providerState}>
          <Header />
          {children}
        </layoutContext.Provider>
        </div>
      </body>
    </html>
  );
}
